/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import FiveCodMover.FiveCodMoverJFrame;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.EquiposLogica;
import logica.PartidosLogica;
import repositorio.EquiposRepositorio;

/**
 *
 * @author nico2
 */
public class MenuPartido extends javax.swing.JFrame {

    PartidosLogica partidoLog = new PartidosLogica();
    DefaultTableModel defaultTableModel = new DefaultTableModel();
    DefaultTableModel defaultTableModel2 = new DefaultTableModel();
    EquiposLogica equipoLogica = new EquiposLogica();
    EquiposRepositorio equipoRepositorio = new EquiposRepositorio();

    String[][] actualizarTabla1 = new String[12][9];
    String[][] actualizarTabla2 = new String[12][9];

    String ganador = "";
    String puntosTotales1 = "0";
    String puntosTotales2 = "0";

    String[][] codigoEquipo = equipoRepositorio.obtenerNombreYCodigoEquipo();

    String ganadorPartido = null;
    int nombreEquipo1 = -1;
    int nombreEquipo2 = -1;

    Timer contadorTiempo = new Timer();
    TimerTask contadorTareaError = new TimerTask() {
        @Override
        public void run() {
            msgError.setVisible(false);
        }
    };
     TimerTask contadorTareaSucces = new TimerTask() {
        @Override
        public void run() {
            msgSucces.setVisible(false);
        }
    };

    /**
     * Creates new form NewJFrame
     */
    public MenuPartido() {
        initComponents();

        

                
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        this.setBackground(new Color(0, 0, 0, 0));

        fechaDC.setBackground(new Color(0, 0, 0, 0));
        numeroFaltasTF.setBackground(new Color(0, 0, 0, 0));
        puntosEquipo1TF.setBackground(new Color(0, 0, 0, 0));
        puntosEquipo2TF.setBackground(new Color(0, 0, 0, 0));
        arbitroTF.setBackground(new Color(0, 0, 0, 0));
        espectadoresTF.setBackground(new Color(0, 0, 0, 0));
        estadioTF.setBackground(new Color(0, 0, 0, 0));

        jScrollPane2.setVisible(false);
        jTable1.setVisible(false);
        jScrollPane3.setVisible(false);
        jTable2.setVisible(false);

        logoNBAx2.setVisible(false);
        msgSucces.setVisible(false);
        msgError.setVisible(false);
        guardar.setVisible(true);
        guardarTabla.setVisible(false);

        defaultTableModel = (DefaultTableModel) jTable1.getModel();
        defaultTableModel2 = (DefaultTableModel) jTable2.getModel();

        equipo1CB.removeAllItems();
        equipo2CB.removeAllItems();

        for (int i = 0; i < codigoEquipo.length; i++) {
            StringBuilder stringBuilder = new StringBuilder();
            String singleString = "";
            stringBuilder.append(codigoEquipo[i][0]);
            singleString = stringBuilder.toString();
            equipo1CB.addItem(singleString);
            equipo2CB.addItem(singleString);
        }
        
        
        
        numeroPuntos1.setVisible( true );
        numeroPuntos2.setVisible( true );       
        puntosEquipo1TF.setVisible( true );
        puntosEquipo2TF.setVisible( true );
        
        
        actualizar1.setVisible( false );
        actualizar2.setVisible( false );
        
        placeHolderTextFields();
    }

    public void placeHolderTextFields() {
        TextPrompt numeroFaltas = new TextPrompt("Ingresar número de faltas", numeroFaltasTF);
        TextPrompt puntosEquipo1 = new TextPrompt("Ingresar número puntos", puntosEquipo1TF);
        TextPrompt puntosEquipo2 = new TextPrompt("Ingresar número puntos", puntosEquipo2TF);
        TextPrompt numeroEspectadores = new TextPrompt("Ingresar número de espectadores", espectadoresTF);
        TextPrompt nombreEstadio = new TextPrompt("Ingresar nombre del estadio", estadioTF);
        TextPrompt nombreArbitro = new TextPrompt("Ingresar nombre del arbitro", arbitroTF);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        guardarTabla = new javax.swing.JLabel();
        actualizar1 = new javax.swing.JLabel();
        actualizar2 = new javax.swing.JLabel();
        msgError = new javax.swing.JLabel();
        msgSucces = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        fechaDC = new com.toedter.calendar.JDateChooser();
        equipo2CB = new javax.swing.JComboBox<>();
        equipo1CB = new javax.swing.JComboBox<>();
        numeroFaltasTF = new javax.swing.JTextField();
        puntosEquipo1TF = new javax.swing.JTextField();
        puntosEquipo2TF = new javax.swing.JTextField();
        arbitroTF = new javax.swing.JTextField();
        estadioTF = new javax.swing.JTextField();
        espectadoresTF = new javax.swing.JTextField();
        numeroPuntos5 = new javax.swing.JLabel();
        numeroPuntos3 = new javax.swing.JLabel();
        numeroPuntos4 = new javax.swing.JLabel();
        numeroPuntos2 = new javax.swing.JLabel();
        numeroPuntos1 = new javax.swing.JLabel();
        faltasTotales = new javax.swing.JLabel();
        equipo1 = new javax.swing.JLabel();
        experiencia = new javax.swing.JLabel();
        cargo = new javax.swing.JLabel();
        guardar = new javax.swing.JLabel();
        mostrarInformacion = new javax.swing.JLabel();
        inscribirInformacio = new javax.swing.JLabel();
        inscribirJugadores = new javax.swing.JLabel();
        Menu = new javax.swing.JLabel();
        logoNBAx2 = new javax.swing.JLabel();
        logoNBA = new javax.swing.JLabel();
        shapeBackground = new javax.swing.JLabel();
        volver = new javax.swing.JLabel();
        backGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        guardarTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/guardarBTN.png"))); // NOI18N
        guardarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarTablaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarTablaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarTablaMouseExited(evt);
            }
        });
        guardarTabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guardarTablaKeyPressed(evt);
            }
        });
        jPanel1.add(guardarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 480, -1, -1));

        actualizar1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        actualizar1.setForeground(new java.awt.Color(0, 0, 0));
        actualizar1.setText("Actualizar jugadores equipo 1");
        jPanel1.add(actualizar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, -1, -1));

        actualizar2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        actualizar2.setForeground(new java.awt.Color(0, 0, 0));
        actualizar2.setText("Actualizar jugadores equipo 2");
        jPanel1.add(actualizar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 250, -1, -1));

        msgError.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        msgError.setForeground(new java.awt.Color(255, 102, 102));
        msgError.setText("Por favor no dejar casillas vacias e ingresar numeros validos");
        jPanel1.add(msgError, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, 310, 60));

        msgSucces.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        msgSucces.setForeground(new java.awt.Color(0, 204, 0));
        msgSucces.setText("Datos guardados exitosamente");
        jPanel1.add(msgSucces, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 480, 260, 40));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntos anotados", "Número de faltas", "Número de robos", "Asistencias", "Tapones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 810, 180));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Puntos anotados", "Número de faltas", "Número de robos", "Asistencias", "Tapones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 810, 180));

        fechaDC.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(fechaDC, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 350, 30));

        equipo2CB.setBackground(new java.awt.Color(153, 153, 255));
        equipo2CB.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        equipo2CB.setForeground(new java.awt.Color(0, 0, 0));
        equipo2CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        equipo2CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipo2CBActionPerformed(evt);
            }
        });
        jPanel1.add(equipo2CB, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 80, 350, 30));

        equipo1CB.setBackground(new java.awt.Color(153, 153, 255));
        equipo1CB.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        equipo1CB.setForeground(new java.awt.Color(0, 0, 0));
        equipo1CB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        equipo1CB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipo1CBActionPerformed(evt);
            }
        });
        jPanel1.add(equipo1CB, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 80, 350, 30));

        numeroFaltasTF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        numeroFaltasTF.setForeground(new java.awt.Color(255, 255, 255));
        numeroFaltasTF.setBorder(null);
        numeroFaltasTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numeroFaltasTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numeroFaltasTFFocusLost(evt);
            }
        });
        numeroFaltasTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroFaltasTFActionPerformed(evt);
            }
        });
        jPanel1.add(numeroFaltasTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 160, 350, 30));

        puntosEquipo1TF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        puntosEquipo1TF.setForeground(new java.awt.Color(255, 255, 255));
        puntosEquipo1TF.setBorder(null);
        puntosEquipo1TF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                puntosEquipo1TFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                puntosEquipo1TFFocusLost(evt);
            }
        });
        puntosEquipo1TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntosEquipo1TFActionPerformed(evt);
            }
        });
        jPanel1.add(puntosEquipo1TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 240, 350, 30));

        puntosEquipo2TF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        puntosEquipo2TF.setForeground(new java.awt.Color(255, 255, 255));
        puntosEquipo2TF.setBorder(null);
        puntosEquipo2TF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                puntosEquipo2TFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                puntosEquipo2TFFocusLost(evt);
            }
        });
        puntosEquipo2TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puntosEquipo2TFActionPerformed(evt);
            }
        });
        jPanel1.add(puntosEquipo2TF, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 240, 350, 30));

        arbitroTF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        arbitroTF.setForeground(new java.awt.Color(255, 255, 255));
        arbitroTF.setBorder(null);
        arbitroTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                arbitroTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                arbitroTFFocusLost(evt);
            }
        });
        arbitroTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arbitroTFActionPerformed(evt);
            }
        });
        jPanel1.add(arbitroTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 320, 350, 30));

        estadioTF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        estadioTF.setForeground(new java.awt.Color(255, 255, 255));
        estadioTF.setBorder(null);
        estadioTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                estadioTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                estadioTFFocusLost(evt);
            }
        });
        estadioTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadioTFActionPerformed(evt);
            }
        });
        jPanel1.add(estadioTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 320, 350, 30));

        espectadoresTF.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        espectadoresTF.setForeground(new java.awt.Color(255, 255, 255));
        espectadoresTF.setBorder(null);
        espectadoresTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                espectadoresTFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                espectadoresTFFocusLost(evt);
            }
        });
        espectadoresTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                espectadoresTFActionPerformed(evt);
            }
        });
        jPanel1.add(espectadoresTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 400, 350, 30));

        numeroPuntos5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/numeroEspectadores.png"))); // NOI18N
        jPanel1.add(numeroPuntos5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 370, -1, -1));

        numeroPuntos3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/nombreArbitro.png"))); // NOI18N
        jPanel1.add(numeroPuntos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, -1, -1));

        numeroPuntos4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/nombreEstadio.png"))); // NOI18N
        jPanel1.add(numeroPuntos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 290, -1, -1));

        numeroPuntos2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/numeroPuntos2.png"))); // NOI18N
        jPanel1.add(numeroPuntos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 210, -1, -1));

        numeroPuntos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/numeroPuntos1.png"))); // NOI18N
        jPanel1.add(numeroPuntos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        faltasTotales.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/faltasTotales.png"))); // NOI18N
        jPanel1.add(faltasTotales, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, -1, -1));

        equipo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/equipo1.png"))); // NOI18N
        jPanel1.add(equipo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        experiencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/equipo2.png"))); // NOI18N
        jPanel1.add(experiencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, -1, -1));

        cargo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/fecha.png"))); // NOI18N
        jPanel1.add(cargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, -1, -1));

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/guardarBTN.png"))); // NOI18N
        guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                guardarMouseExited(evt);
            }
        });
        guardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guardarKeyPressed(evt);
            }
        });
        jPanel1.add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 480, -1, -1));

        mostrarInformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mostrarInformacionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                mostrarInformacionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                mostrarInformacionMouseExited(evt);
            }
        });
        jPanel1.add(mostrarInformacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 300, 40));

        inscribirInformacio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inscribirInformacioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inscribirInformacioMouseExited(evt);
            }
        });
        jPanel1.add(inscribirInformacio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 300, 40));

        inscribirJugadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inscribirJugadoresMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inscribirJugadoresMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inscribirJugadoresMouseExited(evt);
            }
        });
        jPanel1.add(inscribirJugadores, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 300, 40));

        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Menu.png"))); // NOI18N
        jPanel1.add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 320, 240));

        logoNBAx2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/logoNBAx2.png"))); // NOI18N
        logoNBAx2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoNBAx2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoNBAx2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoNBAx2MouseExited(evt);
            }
        });
        jPanel1.add(logoNBAx2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 200, 180));

        logoNBA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/logoNBA.png"))); // NOI18N
        logoNBA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoNBAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoNBAMouseExited(evt);
            }
        });
        jPanel1.add(logoNBA, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 190, 180));

        shapeBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/shapeBackground.png"))); // NOI18N
        jPanel1.add(shapeBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, -500, -1, -1));

        volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Volver.png"))); // NOI18N
        volver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                volverMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                volverMouseExited(evt);
            }
        });
        jPanel1.add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 150, 50));

        backGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Backgorund.png"))); // NOI18N
        jPanel1.add(backGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 540));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inscribirJugadoresMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscribirJugadoresMouseEntered
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/inscribirJugadores.png")));
    }//GEN-LAST:event_inscribirJugadoresMouseEntered

    private void inscribirJugadoresMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscribirJugadoresMouseExited
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Menu.png")));
    }//GEN-LAST:event_inscribirJugadoresMouseExited

    private void inscribirInformacioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscribirInformacioMouseEntered
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/inscribirEquipo.png")));
    }//GEN-LAST:event_inscribirInformacioMouseEntered

    private void inscribirInformacioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscribirInformacioMouseExited
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Menu.png")));
    }//GEN-LAST:event_inscribirInformacioMouseExited

    private void mostrarInformacionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarInformacionMouseEntered
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/mostrarInformacion.png")));
    }//GEN-LAST:event_mostrarInformacionMouseEntered

    private void mostrarInformacionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarInformacionMouseExited
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Menu.png")));
    }//GEN-LAST:event_mostrarInformacionMouseExited

    private void logoNBAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoNBAMouseEntered
        logoNBA.setVisible(false);
        logoNBAx2.setVisible(true);
    }//GEN-LAST:event_logoNBAMouseEntered

    private void logoNBAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoNBAMouseExited
        logoNBA.setVisible(true);
        logoNBAx2.setVisible(false);
    }//GEN-LAST:event_logoNBAMouseExited

    private void logoNBAx2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoNBAx2MouseEntered
        logoNBA.setVisible(false);
        logoNBAx2.setVisible(true);
    }//GEN-LAST:event_logoNBAx2MouseEntered

    private void logoNBAx2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoNBAx2MouseExited
        logoNBA.setVisible(true);
        logoNBAx2.setVisible(false);
    }//GEN-LAST:event_logoNBAx2MouseExited

    private void inscribirJugadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inscribirJugadoresMouseClicked
        MenuJugadores inscribirJugadores = new MenuJugadores();
        inscribirJugadores.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_inscribirJugadoresMouseClicked

    private void volverMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseEntered
        volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/VolverHover.png")));
    }//GEN-LAST:event_volverMouseEntered

    private void volverMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseExited
        volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/Volver.png")));
    }//GEN-LAST:event_volverMouseExited

    private void guardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseEntered
        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/guardarHover.png")));
    }//GEN-LAST:event_guardarMouseEntered

    private void guardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseExited
        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/interfaces/images/guardarBTN.png")));
    }//GEN-LAST:event_guardarMouseExited

    private void volverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverMouseClicked
        MenuInicio menuInicio = new MenuInicio();
        menuInicio.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_volverMouseClicked

    private void guardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarMouseClicked
        String equipo1 = equipo1CB.getSelectedItem().toString();
        String equipo2 = equipo2CB.getSelectedItem().toString();
        String nombreArbitro = arbitroTF.getText().trim();
        String numeroFaltas = numeroFaltasTF.getText();
        String numeroPuntosEquipo1 = puntosEquipo1TF.getText();
        String numeroPuntosEquipo2 = puntosEquipo2TF.getText();
        String nombreEstadio = espectadoresTF.getText();
        String numeroEspectadores = espectadoresTF.getText();

        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formatoFecha.format(fechaDC.getDate());

        nombreEquipo1 = equipo1CB.getSelectedIndex();
        nombreEquipo2 = equipo2CB.getSelectedIndex();

        //Validar que numero faltas, numeroPuntos de ambos equipos y numero espectadores sean numeros
        
     
        if (equipo1.isEmpty() || equipo2.isEmpty() || nombreArbitro.isEmpty() || numeroFaltas.isEmpty() || numeroPuntosEquipo1.isEmpty() || numeroPuntosEquipo2.isEmpty() || nombreEstadio.isEmpty() || numeroEspectadores.isEmpty() || ( !numeroFaltas.matches("[0-9]+")  || numeroFaltas == null ) || ( !numeroPuntosEquipo1.matches("[0-9]+") ||  numeroPuntosEquipo1 == null ) || ( !numeroPuntosEquipo2.matches("[0-9]+") || numeroPuntosEquipo2 == null ) || ( !numeroEspectadores.matches("[0-9]+") || numeroEspectadores == null ) ) {
            msgError.setText("No debes de dejar casillas vacias y deben ser numeros validos");
            msgError.setVisible(true);
            contadorTiempo.schedule(contadorTareaError, 2000);
        } else {
            if (nombreEquipo1 == nombreEquipo2) {
                msgError.setText("Debes de seleccionar dos equipos distintos");
                msgError.setVisible(true);
                contadorTiempo.schedule(contadorTareaError, 2000);
            } else {
                if (Integer.parseInt(numeroPuntosEquipo1.trim()) > Integer.parseInt(numeroPuntosEquipo2.trim())) {
                    ganadorPartido = equipo1;
                    ganador = equipo1;
                } else {
                    ganadorPartido = equipo2;
                    ganador = equipo2;
                }
                partidoLog.añadirPartido(equipo1, equipo2, numeroPuntosEquipo1, numeroPuntosEquipo2, fecha, nombreArbitro, numeroFaltas, nombreEstadio, numeroEspectadores);

                jScrollPane2.setVisible(true);
                jTable1.setVisible(true);
                jScrollPane3.setVisible(true);
                jTable2.setVisible(true);

                guardar.setVisible(false);
                guardarTabla.setVisible(true);
                
                numeroPuntos1.setVisible( false );
                numeroPuntos2.setVisible( false );
                
                puntosEquipo1TF.setVisible( false );
                puntosEquipo2TF.setVisible( false );
                
                
                actualizar1.setVisible( true );
                actualizar2.setVisible( true );
                llenarTabla();

            }

        }


    }//GEN-LAST:event_guardarMouseClicked

    private void guardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guardarKeyPressed

    }//GEN-LAST:event_guardarKeyPressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        FiveCodMoverJFrame.MouseDraggedFrame(evt, this);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        FiveCodMoverJFrame.MousePressed(evt);
    }//GEN-LAST:event_formMousePressed

    private void numeroFaltasTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroFaltasTFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroFaltasTFFocusGained

    private void numeroFaltasTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroFaltasTFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroFaltasTFFocusLost

    private void numeroFaltasTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroFaltasTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroFaltasTFActionPerformed

    private void puntosEquipo1TFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_puntosEquipo1TFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo1TFFocusGained

    private void puntosEquipo1TFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_puntosEquipo1TFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo1TFFocusLost

    private void puntosEquipo1TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntosEquipo1TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo1TFActionPerformed

    private void puntosEquipo2TFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_puntosEquipo2TFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo2TFFocusGained

    private void puntosEquipo2TFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_puntosEquipo2TFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo2TFFocusLost

    private void puntosEquipo2TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puntosEquipo2TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puntosEquipo2TFActionPerformed

    private void arbitroTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_arbitroTFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_arbitroTFFocusGained

    private void arbitroTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_arbitroTFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_arbitroTFFocusLost

    private void arbitroTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arbitroTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arbitroTFActionPerformed

    private void estadioTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_estadioTFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_estadioTFFocusGained

    private void estadioTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_estadioTFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_estadioTFFocusLost

    private void estadioTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadioTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadioTFActionPerformed

    private void espectadoresTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_espectadoresTFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_espectadoresTFFocusGained

    private void espectadoresTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_espectadoresTFFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_espectadoresTFFocusLost

    private void espectadoresTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_espectadoresTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_espectadoresTFActionPerformed

    private void equipo1CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipo1CBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equipo1CBActionPerformed

    private void equipo2CBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipo2CBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equipo2CBActionPerformed

    private void guardarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarTablaMouseClicked
        
        String id1 = codigoEquipo[nombreEquipo1][1];

        for (int i = 0; i < this.actualizarTabla1.length; i++) {

            this.actualizarTabla1[i][0] = equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][0].trim();
            this.actualizarTabla1[i][1] = equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][1].trim();
            this.actualizarTabla1[i][2] = equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][2].trim();
            this.actualizarTabla1[i][3] = equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][3].trim();

            for (int k = 1; k < 6; k++) {

                int valorTabla = Integer.parseInt((defaultTableModel.getValueAt(i, k) + "".trim()));
                int valorAntiguoJugador = Integer.parseInt(equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][k + 3].trim());

                if (k == 1) {
                    puntosTotales1 = (Integer.parseInt(puntosTotales1.trim()) + valorTabla) + "";
                }

                this.actualizarTabla1[i][k + 3] = (valorTabla + valorAntiguoJugador) + "";
            }
        }

        String[] datosEquipo1 = equipoLogica.obtenerEquipoPorId(id1);

        actualizarEquipo(id1, datosEquipo1, actualizarTabla1);

        System.out.println("Actualizando tabla 2");
        String id2 = codigoEquipo[nombreEquipo2][1];

        for (int i = 0; i < this.actualizarTabla2.length; i++) {

            this.actualizarTabla2[i][0] = equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][0].trim();
            this.actualizarTabla2[i][1] = equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][1].trim();
            this.actualizarTabla2[i][2] = equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][2].trim();
            this.actualizarTabla2[i][3] = equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][3].trim();

            for (int k = 1; k < 6; k++) {

                int valorTabla = Integer.parseInt((defaultTableModel2.getValueAt(i, k) + "".trim()));
                int valorAntiguoJugador = Integer.parseInt(equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][k + 3].trim());

                if (k == 1) {
                    puntosTotales2 = (Integer.parseInt(puntosTotales2.trim()) + valorTabla) + "";
                }
                this.actualizarTabla2[i][k + 3] = (valorTabla + valorAntiguoJugador) + "";

            }
        }

        System.out.println(id2);
        String[] datosEquipo2 = equipoLogica.obtenerEquipoPorId(id2);

        actualizarEquipo(id2, datosEquipo2, actualizarTabla2);
        guardarTabla.setVisible(false);
        
        msgSucces.setVisible(true);
        contadorTiempo.schedule(contadorTareaSucces, 2000);
    }//GEN-LAST:event_guardarTablaMouseClicked

    private void guardarTablaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarTablaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarTablaMouseEntered

    private void guardarTablaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarTablaMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarTablaMouseExited

    private void guardarTablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guardarTablaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarTablaKeyPressed

    private void mostrarInformacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarInformacionMouseClicked
        MenuEstadisticas menuEstadisticas = new MenuEstadisticas();
        menuEstadisticas.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mostrarInformacionMouseClicked

    private void logoNBAx2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoNBAx2MouseClicked
        MenuInicio menuInicio = new MenuInicio();
        menuInicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoNBAx2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPartido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPartido().setVisible(true);
            }
        });
    }

    public void llenarTabla() {
        Object[] matrizTabla1 = new Object[6];
        Object[] matrizTabla2 = new Object[6];
        String id1 = codigoEquipo[nombreEquipo1][1];
        String id2 = codigoEquipo[nombreEquipo2][1];
        for (int i = 0; i < 12; i++) {
            StringBuilder stringBuilder111 = new StringBuilder();
            StringBuilder stringBuilder211 = new StringBuilder();
            StringBuilder stringBuilder311 = new StringBuilder();
            StringBuilder stringBuilder411 = new StringBuilder();
            StringBuilder stringBuilder511 = new StringBuilder();
            StringBuilder stringBuilder611 = new StringBuilder();
            String singleString211 = "";
            String singleString311 = "";
            String singleString411 = "";
            String singleString511 = "";
            String singleString611 = "";
            String singleString111 = "";
            stringBuilder111.append(equipoLogica.obtenerJugadoresEquipoPorId(id1)[i][1]);
            stringBuilder211.append(0);
            stringBuilder311.append(0);
            stringBuilder411.append(0);
            stringBuilder511.append(0);
            stringBuilder611.append(0);
            singleString111 = stringBuilder111.toString();
            singleString211 = stringBuilder211.toString();
            singleString311 = stringBuilder311.toString();
            singleString411 = stringBuilder411.toString();
            singleString511 = stringBuilder511.toString();
            singleString611 = stringBuilder611.toString();
            matrizTabla1[0] = singleString111;
            matrizTabla1[1] = singleString211;
            matrizTabla1[2] = singleString311;
            matrizTabla1[3] = singleString411;
            matrizTabla1[4] = singleString511;
            matrizTabla1[5] = singleString611;

            defaultTableModel.addRow(matrizTabla1);
        }

        for (int i = 0; i < 12; i++) {
            StringBuilder stringBuilder112 = new StringBuilder();
            StringBuilder stringBuilder212 = new StringBuilder();
            StringBuilder stringBuilder312 = new StringBuilder();
            StringBuilder stringBuilder412 = new StringBuilder();
            StringBuilder stringBuilder512 = new StringBuilder();
            StringBuilder stringBuilder612 = new StringBuilder();
            String singleString212 = "";
            String singleString312 = "";
            String singleString412 = "";
            String singleString512 = "";
            String singleString612 = "";
            String singleString112 = "";
            stringBuilder112.append(equipoLogica.obtenerJugadoresEquipoPorId(id2)[i][1]);
            stringBuilder212.append(0);
            stringBuilder312.append(0);
            stringBuilder412.append(0);
            stringBuilder512.append(0);
            stringBuilder612.append(0);
            singleString112 = stringBuilder112.toString();
            singleString212 = stringBuilder212.toString();
            singleString312 = stringBuilder312.toString();
            singleString412 = stringBuilder412.toString();
            singleString512 = stringBuilder512.toString();
            singleString612 = stringBuilder612.toString();
            matrizTabla2[0] = singleString112;
            matrizTabla2[1] = singleString212;
            matrizTabla2[2] = singleString312;
            matrizTabla2[3] = singleString412;
            matrizTabla2[4] = singleString512;
            matrizTabla2[5] = singleString612;

            defaultTableModel2.addRow(matrizTabla2);
        }
    }

    public void actualizarEquipo(String codigo, String[] equipoInfo, String[][] jugadoresActualizados) {
        
        
           //Asignar victoria/derrota
        if (equipoInfo[0].trim().equals(ganador.trim())) {

            equipoInfo[3] = (Integer.parseInt(equipoInfo[3].trim()) + 1) + "";
        } else {

            equipoInfo[4] = (Integer.parseInt(equipoInfo[4].trim()) + 1) + "";
        }

        equipoInfo[5] = (Integer.parseInt(equipoInfo[5].trim()) + Integer.parseInt(puntosTotales1.trim())) + "";
        EquiposLogica equipoL1 = new EquiposLogica();
        equipoL1.actualizarEquipo(codigo.trim(), equipoInfo, jugadoresActualizados);

        equipoInfo[5] = (Integer.parseInt(equipoInfo[5].trim()) + Integer.parseInt(puntosTotales2.trim())) + "";
        EquiposLogica equipoL2 = new EquiposLogica();
        equipoL2.actualizarEquipo(codigo.trim(), equipoInfo, jugadoresActualizados);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Menu;
    private javax.swing.JLabel actualizar1;
    private javax.swing.JLabel actualizar2;
    public static javax.swing.JTextField arbitroTF;
    private javax.swing.JLabel backGround;
    private javax.swing.JLabel cargo;
    private javax.swing.JLabel equipo1;
    private javax.swing.JComboBox<String> equipo1CB;
    private javax.swing.JComboBox<String> equipo2CB;
    public static javax.swing.JTextField espectadoresTF;
    public static javax.swing.JTextField estadioTF;
    private javax.swing.JLabel experiencia;
    private javax.swing.JLabel faltasTotales;
    private com.toedter.calendar.JDateChooser fechaDC;
    private javax.swing.JLabel guardar;
    private javax.swing.JLabel guardarTabla;
    private javax.swing.JLabel inscribirInformacio;
    private javax.swing.JLabel inscribirJugadores;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel logoNBA;
    private javax.swing.JLabel logoNBAx2;
    private javax.swing.JLabel mostrarInformacion;
    private javax.swing.JLabel msgError;
    private javax.swing.JLabel msgSucces;
    public static javax.swing.JTextField numeroFaltasTF;
    private javax.swing.JLabel numeroPuntos1;
    private javax.swing.JLabel numeroPuntos2;
    private javax.swing.JLabel numeroPuntos3;
    private javax.swing.JLabel numeroPuntos4;
    private javax.swing.JLabel numeroPuntos5;
    public static javax.swing.JTextField puntosEquipo1TF;
    public static javax.swing.JTextField puntosEquipo2TF;
    private javax.swing.JLabel shapeBackground;
    private javax.swing.JLabel volver;
    // End of variables declaration//GEN-END:variables
}
